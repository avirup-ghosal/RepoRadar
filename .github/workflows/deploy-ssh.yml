name: Build & SSH Deploy to EC2

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/my-nextjs-app
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env.local
        working-directory: ./my-app
        run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env.local

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG ./my-app

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        run: |
          set -e
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -x
            docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_TOKEN }}"
            docker pull $IMAGE_NAME:$IMAGE_TAG
            docker stop my-nextjs-app || true
            docker rm my-nextjs-app || true
            docker rmi -f $IMAGE_NAME:$IMAGE_TAG || true
            docker run -d \
              -p 3006:3000 \
              --name my-nextjs-app \
              -e GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
              $IMAGE_NAME:$IMAGE_TAG
          EOF
